<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.leon.finch.dal.foo.FooMapper">

    <!--  定义数据库对象与视图的字段映射关系  -->
    <resultMap id="baseResultMap" type="org.leon.finch.dal.foo.Foo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
    </resultMap>

    <!--  定义数据库中有效字段，因为可能有些字段被废弃了  -->
    <sql id="allColumns">
        id, gmt_create, gmt_modified, name, age
    </sql>

    <insert id="insert" parameterType="org.leon.finch.dal.foo.Foo">

        -- 解决数据库不支持自增主键的情况
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>

        INSERT INTO foo (
        gmt_create, gmt_modified, name, age
        ) VALUES (
        -- 防止空值，因此标注上jdbcType
        #{gmtCreate,jdbcType=TIMESTAMP},
        #{gmtModified,jdbcType=TIMESTAMP},
        #{name,jdbcType=VARCHAR},
        #{age,jdbcType=INTEGER}
        )

    </insert>

    <insert id="batchInsert" parameterType="java.util.List">

        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>

        INSERT INTO foo (
        gmt_create, gmt_modified, name, age
        ) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.gmtCreate,jdbcType=TIMESTAMP},
            #{item.gmtModified,jdbcType=TIMESTAMP},
            #{item.name,jdbcType=VARCHAR},
            #{item.age,jdbcType=INTEGER}
            )
        </foreach>

    </insert>

    <delete id="deleteById" parameterType="java.lang.Long">

        DELETE FROM foo
        WHERE id = #{id,jdbcType=BIGINT}

    </delete>

    <delete id="deleteByIds" parameterType="java.util.List">

        DELETE FROM foo
        WHERE
        <choose>

            <when test="list == null || list.isEmpty()">
                1 = 0
            </when>

            <otherwise>
                id IN
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>

            </otherwise>

        </choose>

    </delete>

    <update id="update" parameterType="org.leon.finch.dal.foo.Foo">

        UPDATE foo
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
        </set>
        WHERE
        id = #{id,jdbcType=BIGINT}

    </update>

    <select id="selectById" parameterType="java.lang.Long" resultMap="baseResultMap">

        SELECT
        <include refid="allColumns"/>
        FROM foo
        WHERE
        id = #{id,jdbcType=BIGINT}

    </select>

    <select id="selectByIds" parameterType="java.util.List" resultMap="baseResultMap">

        SELECT
        <include refid="allColumns"/>
        FROM foo
        WHERE
        <choose>

            <when test="list == null || list.isEmpty()">
                1 = 0
            </when>

            <otherwise>
                id IN
                <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
                    #{id}
                </foreach>

            </otherwise>

        </choose>

    </select>


    <select id="page" resultType="org.leon.finch.dal.foo.Foo">

        SELECT

        <include refid="allColumns"/>

        FROM foo

        <where>

            <if test="name !=null and name != ''">
                AND name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="age != null">
                AND age = #{age}
            </if>

        </where>
        <choose>

            <when test="orderId != null and orderId.name() == 'ASC'">
                ORDER BY id ASC
            </when>
            <when test="orderId != null and orderId.name() == 'DESC'">
                ORDER BY id DESC
            </when>


            <when test="orderGmtCreate != null and orderGmtCreate.name() == 'ASC'">
                ORDER BY gmt_create ASC
            </when>
            <when test="orderGmtCreate != null and orderGmtCreate.name() == 'DESC'">
                ORDER BY gmt_create DESC
            </when>


            <when test="orderGmtModified != null and orderGmtModified.name() == 'ASC'">
                ORDER BY gmt_modified ASC
            </when>
            <when test="orderGmtModified != null and orderGmtModified.name() == 'DESC'">
                ORDER BY gmt_modified DESC
            </when>

        </choose>

    </select>


</mapper>